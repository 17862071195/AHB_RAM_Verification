Command: vcs -full64 -ntb_opts uvm-1.2 -debug_acc+all -l out/log/elab.log -sim_res=1ps \
-top ahb_ram_tb -o out/obj/ahb_ram_tb.simv
Doing common elaboration 
                         Chronologic VCS (TM)
       Version O-2018.09-SP2_Full64 -- Thu Feb 23 22:24:07 2023
               Copyright (c) 1991-2018 by Synopsys Inc.
                         ALL RIGHTS RESERVED

This program is proprietary and confidential information of Synopsys Inc.
and may be used and disclosed only as authorized in a license agreement
controlling such use and disclosure.

Top Level Modules:
       uvm_custom_install_recording
       uvm_custom_install_verdi_recording
       ahb_ram_tb
TimeScale is 1 ps / 1 ps

Warning-[PCWM-W] Port connection width mismatch
../tb/ahb_ram_tb.sv, 18
"ahb_blockram_32 #(16, , , , , , , , , , ) dut( .HCLK (ahb_ram_tb.ahb_if.hclk),  .HRESETn (ahb_ram_tb.ahb_if.hresetn),  .HSELBRAM (1'b1),  .HREADY (ahb_ram_tb.ahb_if.hready),  .HTRANS (ahb_ram_tb.ahb_if.htrans),  .HSIZE (ahb_ram_tb.ahb_if.hsize),  .HWRITE (ahb_ram_tb.ahb_if.hwrite),  .HADDR (ahb_ram_tb.ahb_if.haddr),  .HWDATA (ahb_ram_tb.ahb_if.hwdata),  .HREADYOUT (ahb_ram_tb.ahb_if.hready),  .HRESP (ahb_ram_tb.ahb_if.hresp),  .HRDATA (ahb_ram_tb.ahb_if.hrdata));"
  The following 3-bit expression is connected to 2-bit port "HSIZE" of module 
  "ahb_blockram_32", instance "dut".
  Expression: ahb_ram_tb.ahb_if.hsize
  	use +lint=PCWM for more details


Warning-[PCWM-W] Port connection width mismatch
../tb/ahb_ram_tb.sv, 18
"ahb_blockram_32 #(16, , , , , , , , , , ) dut( .HCLK (ahb_ram_tb.ahb_if.hclk),  .HRESETn (ahb_ram_tb.ahb_if.hresetn),  .HSELBRAM (1'b1),  .HREADY (ahb_ram_tb.ahb_if.hready),  .HTRANS (ahb_ram_tb.ahb_if.htrans),  .HSIZE (ahb_ram_tb.ahb_if.hsize),  .HWRITE (ahb_ram_tb.ahb_if.hwrite),  .HADDR (ahb_ram_tb.ahb_if.haddr),  .HWDATA (ahb_ram_tb.ahb_if.hwdata),  .HREADYOUT (ahb_ram_tb.ahb_if.hready),  .HRESP (ahb_ram_tb.ahb_if.hresp),  .HRDATA (ahb_ram_tb.ahb_if.hrdata));"
  The following 32-bit expression is connected to 16-bit port "HADDR" of 
  module "ahb_blockram_32", instance "dut".
  Expression: ahb_ram_tb.ahb_if.haddr
  	use +lint=PCWM for more details


Warning-[PCWM-W] Port connection width mismatch
../tb/ahb_ram_tb.sv, 18
"ahb_blockram_32 #(16, , , , , , , , , , ) dut( .HCLK (ahb_ram_tb.ahb_if.hclk),  .HRESETn (ahb_ram_tb.ahb_if.hresetn),  .HSELBRAM (1'b1),  .HREADY (ahb_ram_tb.ahb_if.hready),  .HTRANS (ahb_ram_tb.ahb_if.htrans),  .HSIZE (ahb_ram_tb.ahb_if.hsize),  .HWRITE (ahb_ram_tb.ahb_if.hwrite),  .HADDR (ahb_ram_tb.ahb_if.haddr),  .HWDATA (ahb_ram_tb.ahb_if.hwdata),  .HREADYOUT (ahb_ram_tb.ahb_if.hready),  .HRESP (ahb_ram_tb.ahb_if.hresp),  .HRDATA (ahb_ram_tb.ahb_if.hrdata));"
  The following 2-bit expression is connected to 1-bit port "HRESP" of module 
  "ahb_blockram_32", instance "dut".
  Expression: ahb_ram_tb.ahb_if.hresp
  	use +lint=PCWM for more details


Warning-[PCWM-W] Port connection width mismatch
../tb/ahb_ram_tb.sv, 18
"ahb_blockram_32 #(16, , , , , , , , , , ) dut( .HCLK (ahb_ram_tb.ahb_if.hclk),  .HRESETn (ahb_ram_tb.ahb_if.hresetn),  .HSELBRAM (1'b1),  .HREADY (ahb_ram_tb.ahb_if.hready),  .HTRANS (ahb_ram_tb.ahb_if.htrans),  .HSIZE (ahb_ram_tb.ahb_if.hsize),  .HWRITE (ahb_ram_tb.ahb_if.hwrite),  .HADDR (ahb_ram_tb.ahb_if.haddr),  .HWDATA (ahb_ram_tb.ahb_if.hwdata),  .HREADYOUT (ahb_ram_tb.ahb_if.hready),  .HRESP (ahb_ram_tb.ahb_if.hresp),  .HRDATA (ahb_ram_tb.ahb_if.hrdata));"
  The following 64-bit expression is connected to 32-bit port "HRDATA" of 
  module "ahb_blockram_32", instance "dut".
  Expression: ahb_ram_tb.ahb_if.hrdata
  	use +lint=PCWM for more details

Starting vcs inline pass...
12 modules and 0 UDP read.
recompiling package vcs_paramclassrepository
recompiling module uvm_custom_install_verdi_recording
Both modules done.
	However, due to incremental compilation, only 2 modules need to be compiled. 
make[1]: Entering directory `/home/verifier/DVT_Code/AHB_RAM/uvm/sim/csrc'
rm -f _csrc*.so pre_vcsobj_*.so share_vcsobj_*.so
ld -shared  -Bsymbolic  -o .//../out/obj/ahb_ram_tb.simv.daidir//_csrc0.so objs/amcQw_d.o \

rm -f _csrc0.so
if [ -x ../out/obj/ahb_ram_tb.simv ]; then chmod -x ../out/obj/ahb_ram_tb.simv; fi \

g++  -o ../out/obj/ahb_ram_tb.simv    -Wl,-rpath-link=./ -Wl,-rpath='$ORIGIN'/ahb_ram_tb.simv.daidir/ \
-Wl,-rpath=./ahb_ram_tb.simv.daidir/ -Wl,-rpath='$ORIGIN'/ahb_ram_tb.simv.daidir//scsim.db.dir \
-rdynamic -Wl,-rpath=/opt/synopsys/vcs/vcs-mx/O-2018.09-SP2/linux64/lib -L/opt/synopsys/vcs/vcs-mx/O-2018.09-SP2/linux64/lib \
uvm_dpi.o uvm_verdi_dpi.o     _109421_archive_1.so _prev_archive_1.so _csrc0.so  \
SIM_l.o  _csrc0.so    rmapats_mop.o rmapats.o rmar.o rmar_nd.o  rmar_llvm_0_1.o rmar_llvm_0_0.o \
-lzerosoft_rt_stubs -lerrorinf -lsnpsmalloc -lvfs    -lvcsnew -lsimprofile -lvirsim \
-luclinative /opt/synopsys/vcs/vcs-mx/O-2018.09-SP2/linux64/lib/vcs_tls.o   -Wl,-whole-archive \
-lvcsucli -Wl,-no-whole-archive       ./../out/obj/ahb_ram_tb.simv.daidir/vc_hdrs.o \
_vcs_pli_stub_.o   /opt/synopsys/vcs/vcs-mx/O-2018.09-SP2/linux64/lib/vcs_save_restore_new.o \
/opt/synopsys/verdi/verdi/Verdi_O-2018.09-SP2/share/PLI/VCS/LINUX64/pli.a -ldl  -lc \
-lm -lpthread -ldl 
../out/obj/ahb_ram_tb.simv up to date
make[1]: Leaving directory `/home/verifier/DVT_Code/AHB_RAM/uvm/sim/csrc'
CPU time: 17.586 seconds to compile + .666 seconds to elab + 1.129 seconds to link
